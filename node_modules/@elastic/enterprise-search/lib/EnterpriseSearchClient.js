"use strict";
/*
 * Licensed to Elasticsearch B.V. under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch B.V. licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnterpriseTypes = void 0;
const tslib_1 = require("tslib");
const transport_1 = require("@elastic/transport");
const Serializer_1 = tslib_1.__importDefault(require("./Serializer"));
const api_1 = tslib_1.__importDefault(require("./api/enterprise/api"));
const utils_1 = require("./utils");
exports.EnterpriseTypes = tslib_1.__importStar(require("./api/enterprise/types"));
class EnterpriseSearchClient extends api_1.default {
    constructor(opts, internal) {
        super();
        Object.defineProperty(this, "transport", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        const authorization = (0, utils_1.isBearerAuth)(opts.auth)
            ? `Bearer ${opts.auth.token}`
            : 'Basic ' + Buffer.from(`${opts.auth.username}:${opts.auth.password}`).toString('base64');
        this.transport = new transport_1.Transport({
            serializer: new Serializer_1.default(),
            connectionPool: internal.connectionPool,
            diagnostic: internal.diagnostic,
            compression: false,
            name: 'enterprise-search',
            headers: { authorization }
        });
    }
}
exports.default = EnterpriseSearchClient;
//# sourceMappingURL=EnterpriseSearchClient.js.map